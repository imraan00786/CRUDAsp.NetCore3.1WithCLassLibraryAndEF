(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function unescapeCode(code) {
        switch (code) {
            case 98 /* LowerB */: return 8 /* Backspace */;
            case 116 /* LowerT */: return 9 /* Tab */;
            case 110 /* LowerN */: return 10 /* LineFeed */;
            case 118 /* LowerV */: return 11 /* VerticalTab */;
            case 102 /* LowerF */: return 12 /* FormFeed */;
            case 114 /* LowerR */: return 13 /* CarriageReturn */;
            case 34 /* DoubleQuote */: return 34 /* DoubleQuote */;
            case 39 /* SingleQuote */: return 39 /* SingleQuote */;
            case 92 /* Backslash */: return 92 /* Backslash */;
            default: return code;
        }
    }
    exports.unescapeCode = unescapeCode;
    var Access;
    (function (Access) {
        Access[Access["Reset"] = 0] = "Reset";
        Access[Access["Ancestor"] = 511] = "Ancestor";
        Access[Access["This"] = 512] = "This";
        Access[Access["Scope"] = 1024] = "Scope";
        Access[Access["Member"] = 2048] = "Member";
        Access[Access["Keyed"] = 4096] = "Keyed";
    })(Access = exports.Access || (exports.Access = {}));
    var Precedence;
    (function (Precedence) {
        Precedence[Precedence["Variadic"] = 61] = "Variadic";
        Precedence[Precedence["Assign"] = 62] = "Assign";
        Precedence[Precedence["Conditional"] = 63] = "Conditional";
        Precedence[Precedence["LogicalOR"] = 64] = "LogicalOR";
        Precedence[Precedence["LogicalAND"] = 128] = "LogicalAND";
        Precedence[Precedence["Equality"] = 192] = "Equality";
        Precedence[Precedence["Relational"] = 256] = "Relational";
        Precedence[Precedence["Additive"] = 320] = "Additive";
        Precedence[Precedence["Multiplicative"] = 384] = "Multiplicative";
        Precedence[Precedence["Binary"] = 448] = "Binary";
        Precedence[Precedence["LeftHandSide"] = 449] = "LeftHandSide";
        Precedence[Precedence["Primary"] = 450] = "Primary";
        Precedence[Precedence["Unary"] = 451] = "Unary";
    })(Precedence = exports.Precedence || (exports.Precedence = {}));
    /** @internal */
    var Token;
    (function (Token) {
        Token[Token["EOF"] = 1572864] = "EOF";
        Token[Token["ExpressionTerminal"] = 1048576] = "ExpressionTerminal";
        Token[Token["AccessScopeTerminal"] = 524288] = "AccessScopeTerminal";
        Token[Token["ClosingToken"] = 262144] = "ClosingToken";
        Token[Token["OpeningToken"] = 131072] = "OpeningToken";
        Token[Token["BinaryOp"] = 65536] = "BinaryOp";
        Token[Token["UnaryOp"] = 32768] = "UnaryOp";
        Token[Token["LeftHandSide"] = 16384] = "LeftHandSide";
        Token[Token["StringOrNumericLiteral"] = 12288] = "StringOrNumericLiteral";
        Token[Token["NumericLiteral"] = 8192] = "NumericLiteral";
        Token[Token["StringLiteral"] = 4096] = "StringLiteral";
        Token[Token["IdentifierName"] = 3072] = "IdentifierName";
        Token[Token["Keyword"] = 2048] = "Keyword";
        Token[Token["Identifier"] = 1024] = "Identifier";
        Token[Token["Contextual"] = 512] = "Contextual";
        Token[Token["Precedence"] = 448] = "Precedence";
        Token[Token["Type"] = 63] = "Type";
        Token[Token["FalseKeyword"] = 2048] = "FalseKeyword";
        Token[Token["TrueKeyword"] = 2049] = "TrueKeyword";
        Token[Token["NullKeyword"] = 2050] = "NullKeyword";
        Token[Token["UndefinedKeyword"] = 2051] = "UndefinedKeyword";
        Token[Token["ThisScope"] = 3076] = "ThisScope";
        Token[Token["ParentScope"] = 3077] = "ParentScope";
        Token[Token["OpenParen"] = 671750] = "OpenParen";
        Token[Token["OpenBrace"] = 131079] = "OpenBrace";
        Token[Token["Dot"] = 16392] = "Dot";
        Token[Token["CloseBrace"] = 1835017] = "CloseBrace";
        Token[Token["CloseParen"] = 1835018] = "CloseParen";
        Token[Token["Comma"] = 1572875] = "Comma";
        Token[Token["OpenBracket"] = 671756] = "OpenBracket";
        Token[Token["CloseBracket"] = 1835021] = "CloseBracket";
        Token[Token["Colon"] = 1572878] = "Colon";
        Token[Token["Question"] = 1572879] = "Question";
        Token[Token["Ampersand"] = 1572880] = "Ampersand";
        Token[Token["Bar"] = 1572883] = "Bar";
        Token[Token["BarBar"] = 1638548] = "BarBar";
        Token[Token["AmpersandAmpersand"] = 1638613] = "AmpersandAmpersand";
        Token[Token["EqualsEquals"] = 1638678] = "EqualsEquals";
        Token[Token["ExclamationEquals"] = 1638679] = "ExclamationEquals";
        Token[Token["EqualsEqualsEquals"] = 1638680] = "EqualsEqualsEquals";
        Token[Token["ExclamationEqualsEquals"] = 1638681] = "ExclamationEqualsEquals";
        Token[Token["LessThan"] = 1638746] = "LessThan";
        Token[Token["GreaterThan"] = 1638747] = "GreaterThan";
        Token[Token["LessThanEquals"] = 1638748] = "LessThanEquals";
        Token[Token["GreaterThanEquals"] = 1638749] = "GreaterThanEquals";
        Token[Token["InKeyword"] = 1640798] = "InKeyword";
        Token[Token["InstanceOfKeyword"] = 1640799] = "InstanceOfKeyword";
        Token[Token["Plus"] = 623008] = "Plus";
        Token[Token["Minus"] = 623009] = "Minus";
        Token[Token["TypeofKeyword"] = 34850] = "TypeofKeyword";
        Token[Token["VoidKeyword"] = 34851] = "VoidKeyword";
        Token[Token["Asterisk"] = 1638884] = "Asterisk";
        Token[Token["Percent"] = 1638885] = "Percent";
        Token[Token["Slash"] = 1638886] = "Slash";
        Token[Token["Equals"] = 1048615] = "Equals";
        Token[Token["Exclamation"] = 32808] = "Exclamation";
        Token[Token["TemplateTail"] = 540713] = "TemplateTail";
        Token[Token["TemplateContinuation"] = 540714] = "TemplateContinuation";
        Token[Token["OfKeyword"] = 1051179] = "OfKeyword";
    })(Token = exports.Token || (exports.Token = {}));
    var Char;
    (function (Char) {
        Char[Char["Null"] = 0] = "Null";
        Char[Char["Backspace"] = 8] = "Backspace";
        Char[Char["Tab"] = 9] = "Tab";
        Char[Char["LineFeed"] = 10] = "LineFeed";
        Char[Char["VerticalTab"] = 11] = "VerticalTab";
        Char[Char["FormFeed"] = 12] = "FormFeed";
        Char[Char["CarriageReturn"] = 13] = "CarriageReturn";
        Char[Char["Space"] = 32] = "Space";
        Char[Char["Exclamation"] = 33] = "Exclamation";
        Char[Char["DoubleQuote"] = 34] = "DoubleQuote";
        Char[Char["Dollar"] = 36] = "Dollar";
        Char[Char["Percent"] = 37] = "Percent";
        Char[Char["Ampersand"] = 38] = "Ampersand";
        Char[Char["SingleQuote"] = 39] = "SingleQuote";
        Char[Char["OpenParen"] = 40] = "OpenParen";
        Char[Char["CloseParen"] = 41] = "CloseParen";
        Char[Char["Asterisk"] = 42] = "Asterisk";
        Char[Char["Plus"] = 43] = "Plus";
        Char[Char["Comma"] = 44] = "Comma";
        Char[Char["Minus"] = 45] = "Minus";
        Char[Char["Dot"] = 46] = "Dot";
        Char[Char["Slash"] = 47] = "Slash";
        Char[Char["Semicolon"] = 59] = "Semicolon";
        Char[Char["Backtick"] = 96] = "Backtick";
        Char[Char["OpenBracket"] = 91] = "OpenBracket";
        Char[Char["Backslash"] = 92] = "Backslash";
        Char[Char["CloseBracket"] = 93] = "CloseBracket";
        Char[Char["Caret"] = 94] = "Caret";
        Char[Char["Underscore"] = 95] = "Underscore";
        Char[Char["OpenBrace"] = 123] = "OpenBrace";
        Char[Char["Bar"] = 124] = "Bar";
        Char[Char["CloseBrace"] = 125] = "CloseBrace";
        Char[Char["Colon"] = 58] = "Colon";
        Char[Char["LessThan"] = 60] = "LessThan";
        Char[Char["Equals"] = 61] = "Equals";
        Char[Char["GreaterThan"] = 62] = "GreaterThan";
        Char[Char["Question"] = 63] = "Question";
        Char[Char["Zero"] = 48] = "Zero";
        Char[Char["One"] = 49] = "One";
        Char[Char["Two"] = 50] = "Two";
        Char[Char["Three"] = 51] = "Three";
        Char[Char["Four"] = 52] = "Four";
        Char[Char["Five"] = 53] = "Five";
        Char[Char["Six"] = 54] = "Six";
        Char[Char["Seven"] = 55] = "Seven";
        Char[Char["Eight"] = 56] = "Eight";
        Char[Char["Nine"] = 57] = "Nine";
        Char[Char["UpperA"] = 65] = "UpperA";
        Char[Char["UpperB"] = 66] = "UpperB";
        Char[Char["UpperC"] = 67] = "UpperC";
        Char[Char["UpperD"] = 68] = "UpperD";
        Char[Char["UpperE"] = 69] = "UpperE";
        Char[Char["UpperF"] = 70] = "UpperF";
        Char[Char["UpperG"] = 71] = "UpperG";
        Char[Char["UpperH"] = 72] = "UpperH";
        Char[Char["UpperI"] = 73] = "UpperI";
        Char[Char["UpperJ"] = 74] = "UpperJ";
        Char[Char["UpperK"] = 75] = "UpperK";
        Char[Char["UpperL"] = 76] = "UpperL";
        Char[Char["UpperM"] = 77] = "UpperM";
        Char[Char["UpperN"] = 78] = "UpperN";
        Char[Char["UpperO"] = 79] = "UpperO";
        Char[Char["UpperP"] = 80] = "UpperP";
        Char[Char["UpperQ"] = 81] = "UpperQ";
        Char[Char["UpperR"] = 82] = "UpperR";
        Char[Char["UpperS"] = 83] = "UpperS";
        Char[Char["UpperT"] = 84] = "UpperT";
        Char[Char["UpperU"] = 85] = "UpperU";
        Char[Char["UpperV"] = 86] = "UpperV";
        Char[Char["UpperW"] = 87] = "UpperW";
        Char[Char["UpperX"] = 88] = "UpperX";
        Char[Char["UpperY"] = 89] = "UpperY";
        Char[Char["UpperZ"] = 90] = "UpperZ";
        Char[Char["LowerA"] = 97] = "LowerA";
        Char[Char["LowerB"] = 98] = "LowerB";
        Char[Char["LowerC"] = 99] = "LowerC";
        Char[Char["LowerD"] = 100] = "LowerD";
        Char[Char["LowerE"] = 101] = "LowerE";
        Char[Char["LowerF"] = 102] = "LowerF";
        Char[Char["LowerG"] = 103] = "LowerG";
        Char[Char["LowerH"] = 104] = "LowerH";
        Char[Char["LowerI"] = 105] = "LowerI";
        Char[Char["LowerJ"] = 106] = "LowerJ";
        Char[Char["LowerK"] = 107] = "LowerK";
        Char[Char["LowerL"] = 108] = "LowerL";
        Char[Char["LowerM"] = 109] = "LowerM";
        Char[Char["LowerN"] = 110] = "LowerN";
        Char[Char["LowerO"] = 111] = "LowerO";
        Char[Char["LowerP"] = 112] = "LowerP";
        Char[Char["LowerQ"] = 113] = "LowerQ";
        Char[Char["LowerR"] = 114] = "LowerR";
        Char[Char["LowerS"] = 115] = "LowerS";
        Char[Char["LowerT"] = 116] = "LowerT";
        Char[Char["LowerU"] = 117] = "LowerU";
        Char[Char["LowerV"] = 118] = "LowerV";
        Char[Char["LowerW"] = 119] = "LowerW";
        Char[Char["LowerX"] = 120] = "LowerX";
        Char[Char["LowerY"] = 121] = "LowerY";
        Char[Char["LowerZ"] = 122] = "LowerZ";
    })(Char = exports.Char || (exports.Char = {}));
});
//# sourceMappingURL=common.js.map